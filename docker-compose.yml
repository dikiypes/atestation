version: '3.4'

networks:
  shop:
    driver: bridge


services:
  db_shop:
    restart: always
    container_name: db_shop
    env_file:
      - ./.env
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5


  api_shop:
    container_name: api_shop
    env_file:
      - ./.env
    build: .
    volumes:
      - .:/app
      - static:/app/static
    ports:
      - "8000:8000"
    depends_on:
      db_shop:
        condition: service_healthy
    command: >
      bash -c "python  manage.py collectstatic --noinput
      && chmod -R 755 /app/static
      && gunicorn config.wsgi:application --bind 0.0.0.0:8000"

  nginx_shop:
    image: nginx:latest
    container_name: nginx_shop
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static:/usr/share/nginx/static/
    depends_on:
      - api_shop

volumes:
  postgres_data:
  static:
